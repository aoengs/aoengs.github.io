---
---
<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>个人简介</title>
    <style>
      :root {
        --primary-color: #1a27db;
        --text-primary: #1a202c;
        --text-secondary: #4a5568;
        --bg-hover: rgba(37, 99, 235, 0.05);
        --primary-color-rgb: 26, 39, 219;
      }

      body {
        background: #F7F2F2;
        color: var(--text-primary);
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      }

      .container {
        width: 100%;
        max-width: 1200px;
        padding: 0 1.5rem;
        margin: 0 auto;
      }

      .grid {
        display: grid;
        margin-top: 35px;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 2rem;
        padding: 1rem 0;
      }

      .card {
        background: rgba(255, 255, 255, 0.7);
        backdrop-filter: blur(10px);
        border-radius: 16px;
        padding: 2rem;
        position: relative;
        overflow: hidden;
        border: 1px solid rgba(0, 0, 0, 0.05);
        transform-style: preserve-3d;
        transform: perspective(1000px);
        will-change: transform;
        transition: background-color 0.3s ease;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
      }

      .card-large {
        grid-column: 1 / -1;
        padding: 3.5rem;
        position: relative;
        overflow: hidden;
        background: linear-gradient(
          145deg,
          rgba(255, 255, 255, 0.95) 0%,
          rgba(255, 255, 255, 0.85) 100%
        );
      }

      .card-large::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
          linear-gradient(135deg, rgba(var(--primary-color-rgb), 0.08) 25%, transparent 25%) -20px 0,
          linear-gradient(225deg, rgba(var(--primary-color-rgb), 0.08) 25%, transparent 25%) -20px 0,
          linear-gradient(315deg, rgba(var(--primary-color-rgb), 0.08) 25%, transparent 25%),
          linear-gradient(45deg, rgba(var(--primary-color-rgb), 0.08) 25%, transparent 25%);
        background-size: 40px 40px;
        z-index: 0;
        opacity: 0.5;
        animation: gradientMove 30s linear infinite;
      }

      .avatar-container {
        display: flex;
        align-items: center;
        gap: 2.5rem;
        margin-bottom: 2rem;
        position: relative;
        z-index: 1;
      }

      .avatar {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid #fff;
        
        box-shadow: 5px 5px 5px rgba(146, 146, 146, 0.5);
      }

      .intro-text {
        flex: 1;
      }

      .intro-title {
        font-size: 2.8rem;
        font-weight: 700;
        margin: 0;
        line-height: 1.2;
        background: linear-gradient(45deg, var(--primary-color), #60a5fa);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }

      .intro-subtitle {
        font-size: 1.2rem;
        color: var(--text-secondary);
        margin: 0.8rem 0;
        line-height: 1.6;
      }

      .section-title {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: var(--primary-color);
      }

      .project-title {
        font-size: 1.3rem;
        font-weight: 600;
        margin-bottom: 0.8rem;
        color: var(--text-primary);
      }

      .project-desc {
        color: var(--text-secondary);
        line-height: 1.6;
        font-size: 1.1rem;
      }

      .card-link {
        text-decoration: none;
        color: inherit;
        display: block;
      }

      .card-link .card {
        pointer-events: auto;
      }

      .social-links {
        display: flex;
        gap: 1rem;
        margin-top: 1rem;
      }

      .social-link {
        color: var(--text-secondary);
        text-decoration: none;
        transition: color 0.3s ease;
      }

      .social-link:hover {
        color: var(--primary-color);
      }

      /* 确保卡片内容不受 3D 变换影响 */
      .card > * {
        transform: translateZ(30px);
        pointer-events: none;
      }

      /* 优化性能 */
      @media (prefers-reduced-motion: reduce) {
        .card {
          transform: none !important;
          transition: none !important;
        }
      }

      @media (max-width: 768px) {
        .hero-section {
          padding: 2rem 0;
        }
        
        .hero-title {
          font-size: 2rem;
          line-height: 1.2;
        }

        .content-grid {
          grid-template-columns: 1fr;
          gap: 1.5rem;
        }
      }

      .card-large::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          135deg,
          rgba(255, 255, 255, 0.4) 0%,
          rgba(255, 255, 255, 0) 50%
        );
        pointer-events: none;
      }

      .card-large:hover::before {
        /* animation-play-state: paused; */
      }

      .card-large:hover {
        transform: translateY(-2px);
      }

      @keyframes gradientMove {
        0% {
          background-position: -20px 0, -20px 0, 0 0, 0 0;
        }
        100% {
          background-position: -500px 0, -500px 0, -480px 0, -480px 0;
        }
      }

      /* 移动端适配 */
      @media (max-width: 768px) {
        .grid {
          grid-template-columns: 1fr;  /* 单列布局 */
          gap: 1.5rem;
          margin-top: 20px;
        }

        .card {
          padding: 1.5rem;  /* 减小内边距 */
        }

        .card-large {
          padding: 2rem 1.5rem;
        }

        .avatar-container {
          flex-direction: column;  /* 头像和文字垂直排列 */
          text-align: center;
          gap: 1.5rem;
        }

        .avatar {
          width: 100px;  /* 减小头像尺寸 */
          height: 100px;
        }

        .intro-title {
          font-size: 2rem;  /* 减小标题字号 */
        }

        .intro-subtitle {
          font-size: 1rem;
        }

        .section-title {
          font-size: 1.3rem;
        }

        .project-desc {
          font-size: 1rem;
        }
      }

      /* 小屏幕手机适配 */
      @media (max-width: 480px) {
        .container {
          padding: 0 1rem;
        }

        .card {
          padding: 1.25rem;
        }

        .card-large {
          padding: 1.5rem 1.25rem;
        }

        .intro-title {
          font-size: 1.8rem;
        }
      }

      /* Work Card 样式 */
      .card:nth-child(2) {
        background: linear-gradient(
          135deg,
          #f0f7ff 0%,
          #e6f0ff 100%
        );
        border: 1px solid rgba(var(--primary-color-rgb), 0.1);
      }

      .card:nth-child(2)::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(var(--primary-color-rgb), 0.06) 0%, transparent 100%);
        z-index: 0;
      }

      /* Work Card 悬停效果 */
      .card:nth-child(2):hover {
        transform: translateY(-5px);
        background: linear-gradient(
          135deg,
          #e6f0ff 0%,
          #dce9ff 100%
        );
        box-shadow: 0 15px 30px rgba(var(--primary-color-rgb), 0.1);
      }

      /* Work Card 内容样式 */
      .card:nth-child(2) .section-title {
        color: var(--primary-color);
        font-weight: 700;
      }

      .card:nth-child(2) .project-desc {
        color: rgba(var(--primary-color-rgb), 0.8);
      }

      /* About Card 样式 */
      .card:nth-child(3) {
        background: linear-gradient(
          135deg,
          #f5f8ff 0%,
          #eef2ff 100%
        );
        border: 1px solid rgba(147, 51, 234, 0.1);
      }

      .card:nth-child(3)::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
          linear-gradient(135deg, rgba(147, 51, 234, 0.06) 0%, transparent 100%),
          radial-gradient(
            circle at 100% 100%,
            rgba(147, 51, 234, 0.03) 0%,
            transparent 50%
          );
        z-index: 0;
      }

      .card:nth-child(3):hover {
        transform: translateY(-5px);
        background: linear-gradient(
          135deg,
          #eef2ff 0%,
          #e5eaff 100%
        );
        box-shadow: 0 15px 30px rgba(147, 51, 234, 0.1);
      }

      /* Contact Card 样式 */
      .card:nth-child(4) {
        background: linear-gradient(
          135deg,
          #f0fff4 0%,
          #e6ffec 100%
        );
        border: 1px solid rgba(16, 185, 129, 0.1);
      }

      .card:nth-child(4)::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
          linear-gradient(135deg, rgba(16, 185, 129, 0.06) 0%, transparent 100%),
          repeating-linear-gradient(
            -45deg,
            rgba(16, 185, 129, 0.02) 0%,
            rgba(16, 185, 129, 0.02) 10px,
            transparent 10px,
            transparent 20px
          );
        z-index: 0;
      }

      .card:nth-child(4):hover {
        transform: translateY(-5px);
        background: linear-gradient(
          135deg,
          #e6ffec 0%,
          #dcffe2 100%
        );
        box-shadow: 0 15px 30px rgba(16, 185, 129, 0.1);
      }

      /* 卡片内容样式优化 */
      .card:nth-child(3) .section-title {
        background: linear-gradient(45deg, #9333ea, #a855f7);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 700;
      }

      .card:nth-child(4) .section-title {
        background: linear-gradient(45deg, #10b981, #34d399);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 700;
      }

      /* 描述文字颜色 */
      .card:nth-child(3) .project-desc {
        color: rgba(147, 51, 234, 0.8);
      }

      .card:nth-child(4) .project-desc {
        color: rgba(16, 185, 129, 0.8);
      }

      /* 添加微妙的光效 */
      .card::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          145deg,
          rgba(255, 255, 255, 0.4) 0%,
          rgba(255, 255, 255, 0) 70%
        );
        pointer-events: none;
        z-index: 1;
      }

      /* 确保内容在渐变之上 */
      .card > * {
        position: relative;
        z-index: 2;
      }

    </style>
  </head>
  <body>
    <div class="container">
      <div class="grid">
        <!-- 个人介绍卡片 -->
        <div class="card card-large">
          <div class="avatar-container">
            <img 
              src="/path/to/your/avatar.jpg" 
              alt="头像" 
              class="avatar"
              onError="this.src='https://api.dicebear.com/9.x/thumbs/svg?seed=Brian'"
            />
            <div class="intro-text">
              <h1 class="intro-title">Hi, I'm Bailey</h1>
              <p class="intro-subtitle">A front-end developer, welcome to my space.</p>
              <p class="intro-subtitle">📮 haofengshang@gmail.com</p>
            </div>
          </div>
        </div>

        <!-- 工作项目卡片 -->
       
        <a href="/navigation" class="card" style="text-decoration: none;">
          <h2 class="section-title">Work</h2>
          <div class="project">
            <!-- <h3 class="project-title">导航工具集</h3> -->
            <p class="project-desc">Internet application navigation bar</p>
            
          </div>
        </a>

        <!-- 其他卡片 -->
        <div class="card" style="background: #F9F9F9;">
          <h2 class="section-title">About</h2>
          <p class="project-desc">Focus on user experience design and front-end development</p>
        </div>

        <div class="card" style="background: #F5F8FF;">
          <h2 class="section-title">Contact</h2>
          <p class="project-desc">haofengshang@gmail.com</p>
        </div>
       
      
       
      </div>
    </div>

    <script type="module">
      import { animate } from 'https://cdn.skypack.dev/@motionone/dom';

      document.addEventListener('DOMContentLoaded', () => {
        const cards = document.querySelectorAll('.card');
        
        cards.forEach(card => {
          let isHovering = false;
          let rafId = null;
          let currentX = 0;
          let currentY = 0;
          let targetX = 0;
          let targetY = 0;
          
          // 减小平滑系数，使动画更平滑
          const smoothing = 0.08;
          // 减小旋转幅度
          const rotationFactor = 12;

          function updateCardTransform() {
            if (!isHovering) return;

            // 平滑插值
            currentX += (targetX - currentX) * smoothing;
            currentY += (targetY - currentY) * smoothing;

            // 限制最大旋转角度
            const rotateX = Math.max(Math.min(-currentY, 10), -10);
            const rotateY = Math.max(Math.min(currentX, 10), -10);

            // 应用变换
            card.style.transform = `
              perspective(1000px)
              scale(1.02)
              translateY(-5px)
              rotateX(${rotateX}deg)
              rotateY(${rotateY}deg)
            `;

            if (isHovering) {
              rafId = requestAnimationFrame(updateCardTransform);
            }
          }

          card.addEventListener('mouseenter', () => {
            isHovering = true;
            // 重置当前位置
            currentX = 0;
            currentY = 0;
            targetX = 0;
            targetY = 0;

            // 开始动画循环
            rafId = requestAnimationFrame(updateCardTransform);

            // 入场动画
            animate(card, {
              scale: 1.02,
              y: -5,
              boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)'
            }, {
              duration: 0.4,
              easing: [0.3, 0.1, 0.3, 1]
            });
          });

          card.addEventListener('mousemove', (e) => {
            if (!isHovering) return;

            const rect = card.getBoundingClientRect();
            const centerX = rect.width / 2;
            const centerY = rect.height / 2;
            const mouseX = e.clientX - rect.left;
            const mouseY = e.clientY - rect.top;

            // 计算目标旋转角度，使用更小的系数
            targetX = ((mouseX - centerX) / centerX) * rotationFactor;
            targetY = ((mouseY - centerY) / centerY) * rotationFactor;
          });

          card.addEventListener('mouseleave', () => {
            isHovering = false;
            cancelAnimationFrame(rafId);

            // 离开时平滑过渡回原始状态
            animate(card, {
              transform: 'perspective(1000px) scale(1) translateY(0) rotateX(0deg) rotateY(0deg)',
              boxShadow: '0 5px 15px rgba(0, 0, 0, 0.05)'
            }, {
              duration: 0.6,
              easing: [0.3, 0.1, 0.3, 1]
            });
          });
        });

        // 更新 RGB 变量的函数
        function updateRGBVariable(color) {
          // 将十六进制颜色转换为 RGB
          const hex = color.replace('#', '');
          const r = parseInt(hex.substring(0, 2), 16);
          const g = parseInt(hex.substring(2, 4), 16);
          const b = parseInt(hex.substring(4, 6), 16);
          document.documentElement.style.setProperty('--primary-color-rgb', `${r}, ${g}, ${b}`);
        }

        // 在颜色选择器的更新函数中添加
        function updateColor(e) {
          // ... 现有代码 ...
          const newColor = positionToColor(position);
          updateRGBVariable(newColor);
        }
      });
    </script>
  </body>
</html>